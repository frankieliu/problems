
[C++/Java] 1 Pass Solution

https://leetcode.com/problems/maximize-distance-to-closest-person/discuss/137912

* Lang:    cpp
* Author:  lee215
* Votes:   65

Count the numbers of continuous zeros in the prefix, `res = max(res, zeros)`
Count the numbers of continuous zeros in middle, `res = max(res, (zeros + 1) / 2)`
Count the numbers of continuous zeros in the suffix, `res = max(res, zeros)`

**C++:**
```
    int maxDistToClosest(vector<int> seats) {
        int i, j, res = 0, n = seats.size();
        for (i = j = 0; j < n; ++j)
            if (seats[j] == 1) {
                if (i == 0) res = max(res, j - i);
                else res = max(res, (j - i + 1) / 2);
                i = j + 1;
            }
        res = max(res, n - i);
        return res;
    }
```

**Java:**
```
    public int maxDistToClosest(int[] seats) {
        int i, j, res = 0, n = seats.length;
        for (i = j = 0; j < n; ++j)
            if (seats[j] == 1) {
                if (i == 0) res = Math.max(res, j - i);
                else res = Math.max(res, (j - i + 1) / 2);
                i = j + 1;
            }
        res = Math.max(res, n - i);
        return res;
    }
```
**Python** from @adamzjk:
```
def maxDistToClosest(self, seats):
    res = i = 0
    for j in range(len(seats)):
        if seats[j] == 1:
            res = max(res, (j - i + 1 >> 1, j)[i == 0])
            i = j + 1
    return max(res, len(seats) - i)
```
