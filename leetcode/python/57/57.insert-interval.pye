#
# @lc app=leetcode id=57 lang=python3
#
# [57] Insert Interval
#
# https://leetcode.com/problems/insert-interval/description/
#
# algorithms
# Hard (30.56%)
# Total Accepted:    160.6K
# Total Submissions: 525.7K
# Testcase Example:  '[[1,3],[6,9]]\n[2,5]'
#
# Given a set of non-overlapping intervals, insert a new interval into the
# intervals (merge if necessary).
#
# You may assume that the intervals were initially sorted according to their
# start times.
#
# Example 1:
#
#
# Input: intervals = [[1,3],[6,9]], newInterval = [2,5]
# Output: [[1,5],[6,9]]
#
#
# Example 2:
#
#
# Input: intervals = [[1,2],[3,5],[6,7],[8,10],[12,16]], newInterval = [4,8]
# Output: [[1,2],[3,10],[12,16]]
# Explanation: Because the new interval [4,8] overlaps with [3,5],[6,7],[8,10].
#
#
# Definition for an interval.
# class Interval:
#     def __init__(self, s=0, e=0):
#         self.start = s
#         self.end = e

from bisect import bisect_left


class Solution:

    def insert(self, intervals, newInterval):
        """
        :type intervals: List[Interval]
        :type newInterval: Interval
        :rtype: List[Interval]
        """
        start = [x[0] for x in intervals]
        point = bisect_left(start, newInterval[0])
        a = intervals[0:point] + [newInterval] + intervals[point:]
        return self.merge(a)

    def merge(self, intervals):
        """
        :type intervals: List[Interval]
        :rtype: List[Interval]
        """
        if len(intervals) <= 1:
            return intervals
        a = intervals
        last = [x[1] for x in a]
        a.append([max(last) + 1, max(last) + 1])

        left, right = a[0]
        out = []
        for i in range(1, len(a)):
            nl, nr = a[i]
            if nl <= right:
                if nr <= right:
                    continue
                else:
                    right = nr
            else:
                out.append([left, right])
                left = nl
                right = nr
        return out


test = True
if test:
    s = Solution()
    case = [1]
    if case[0]:
        intervals = [[1, 2], [3, 5], [6, 7], [8, 10], [12, 16]]
        newInterval = [4, 8]
        # Output: [[1,2],[3,10],[12,16]]
        print(s.insert(intervals, newInterval))
