#
# @lc app=leetcode id=20 lang=python3
#
# [20] Valid Parentheses
#
# https://leetcode.com/problems/valid-parentheses/description/
#
# algorithms
# Easy (35.66%)
# Total Accepted:    495.6K
# Total Submissions: 1.4M
# Testcase Example:  '"()"'
#
# Given a string containing just the characters '(', ')', '{', '}', '[' and
# ']', determine if the input string is valid.
#
# An input string is valid if:
#
#
# Open brackets must be closed by the same type of brackets.
# Open brackets must be closed in the correct order.
#
#
# Note that an empty string isÂ also considered valid.
#
# Example 1:
#
#
# Input: "()"
# Output: true
#
#
# Example 2:
#
#
# Input: "()[]{}"
# Output: true
#
#
# Example 3:
#
#
# Input: "(]"
# Output: false
#
#
# Example 4:
#
#
# Input: "([)]"
# Output: false
#
#
# Example 5:
#
#
# Input: "{[]}"
# Output: true
#
#
#

from collections import defaultdict
class Solution:
    def isValid(self, s):
        """
        :type s: str
        :rtype: bool
        """
        st = []
        h = {
            ")": "(",
            "]": "[",
            "}": "{"
        }

        for e in s:
            if e in h:
                if not st or st[-1] != h[e]:
                    return False
                else:
                    st.pop()
            else:
                st.append(e)
        return not st


test = True
if test:
    s = Solution()
    Input = "()[]{}"
    # Output: true
    print(s.isValid(Input))
