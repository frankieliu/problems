
[C++/Java/Python] Two Pointers

https://leetcode.com/problems/push-dominoes/discuss/132332

* Lang:    cpp
* Author:  lee215
* Votes:   46

**Intuition**:
Whether be pushed or not, depend on the shortest distance to \'L\' and \'R\'.
Also the direction matters.
Base on this idea, you can do the same thing inspired by this problem.
https://leetcode.com/problems/shortest-distance-to-a-character/discuss/125788/

Here is another idea that focus on \'L\' and \'R\'.
\'R......R\' => \'RRRRRRRR\'
\'R......L\' => \'RRRRLLLL\' or \'RRRR.LLLL\'
\'L......R\' => \'L......R\'
\'L......L\' => \'LLLLLLLL\'


**Time Complexity**:
O(N)

**C++:**
```
    string pushDominoes(string d) {
        d = \'L\' + d + \'R\';
        string res = "";
        for (int i = 0, j = 1; j < d.length(); ++j) {
            if (d[j] == \'.\') continue;
            int middle = j - i - 1;
            if (i > 0) res += d[i];
            if (d[i] == d[j]) res += string(middle, d[i]);
            else if (d[i] == \'L\' && d[j] == \'R\') res += string(middle, \'.\');
            else res += string(middle / 2, \'R\') + string(middle % 2,\'.\') + string(middle / 2, \'L\');
            i = j;
        }
        return res;
    }
```

**Java:**
```
    public String pushDominoes(String d) {
        d = \'L\' + d + \'R\';
        StringBuilder res = new StringBuilder();
        for (int i = 0, j = 1; j < d.length(); ++j) {
            if (d.charAt(j) == \'.\') continue;
            int middle = j - i - 1;
            if (i > 0) res.append(d.charAt(i));
            if (d.charAt(i) == d.charAt(j))
                for (int k = 0; k < middle; k++) res.append(d.charAt(i));
            else if (d.charAt(i) == \'L\' && d.charAt(j) == \'R\')
                for (int k = 0; k < middle; k++) res.append(\'.\');
            else {
                for (int k = 0; k < middle / 2; k++) res.append(\'R\');
                if (middle % 2 == 1) res.append(\'.\');
                for (int k = 0; k < middle / 2; k++) res.append(\'L\');
            }
            i = j;
        }
        return res.toString();
    }

```
**Python:**
```
    def pushDominoes(self, d):
        d = \'L\' + d + \'R\'
        res = []
        i = 0
        for j in range(1, len(d)):
            if d[j] == \'.\': continue
            middle = j - i - 1
            if i: res.append(d[i])
            if d[i] == d[j]: res.append(d[i] * middle)
            elif d[i] == \'L\' and d[j] == \'R\': res.append(\'.\' * middle)
            else: res.append(\'R\' * (middle / 2) + \'.\' * (middle % 2) + \'L\' * (middle / 2))
            i = j
        return \'\'.join(res)
```
