#
# @lc app=leetcode id=273 lang=python3
#
# [273] Integer to English Words
#
# https://leetcode.com/problems/integer-to-english-words/description/
#
# algorithms
# Hard (23.69%)
# Total Accepted:    88.5K
# Total Submissions: 373.8K
# Testcase Example:  '123'
#
# Convert a non-negative integer to its english words representation. Given
# input is guaranteed to be less than 2^31 - 1.
#
# Example 1:
#
#
# Input: 123
# Output: "One Hundred Twenty Three"
#
#
# Example 2:
#
#
# Input: 12345
# Output: "Twelve Thousand Three Hundred Forty Five"
#
# Example 3:
#
#
# Input: 1234567
# Output: "One Million Two Hundred Thirty Four Thousand Five Hundred Sixty
# Seven"
#
#
# Example 4:
#
#
# Input: 1234567891
# Output: "One Billion Two Hundred Thirty Four Million Five Hundred Sixty Seven
# Thousand Eight Hundred Ninety One"
#
#
#
class Solution:
    def numberToWords(self, num):
        """
        :type num: int
        :rtype: str
        """

        def str2(x):
            sstr = ["", "One", "Two", "Three", "Four",
                    "Five", "Six", "Seven", "Eight", "Nine"]
            tween = sstr + ["Ten", "Eleven", "Twelve", "Thirteen",
                            "Fourteen", "Fifteen", "Sixteen", "Seventeen",
                            "Eighteen", "Nineteen", "Twenty"]
            tens = ["", "", "Twenty", "Thirty", "Forty", "Fifty", "Sixty",
                    "Seventy", "Eighty", "Ninety"]
            twos = str(x)
            if x <= 20:
                twos = tween[x]
            else:
                dig1 = x % 10
                x = x // 10
                tstr = ""
                if x:
                    tstr = tens[x]
                twos = tstr + " " + sstr[dig1]
            return twos.strip()

        def str3(x):
            sstr = ["", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine"]
            dig2 = x % 100
            x = x // 100

            hundred = ""
            if x:
                hundred = sstr[x] + " Hundred"

            # return  + str(dig2)
            return (hundred + " " + str2(dig2)).strip()

        if num == 0:
            return "Zero"

        out = ""
        pstr = ["", "Thousand", "Million", "Billion"]
        p = 0
        while num>0:
            dig3 = num % 1000
            num = num // 1000
            if dig3 > 0:
                out = str3(dig3) + " " + pstr[p] + " " + out
            p += 1
        return out.strip()


test = True
if test:
    s = Solution()
    case = [False] * 4 + [True]
    if case[0]:
        # Example 1:
        Input = 123
        # Output: "One Hundred Twenty Three"
        print(s.numberToWords(Input))
    if case[1]:
        # Example 2:
        Input = 12345
        # Output: "Twelve Thousand Three Hundred Forty Five"
        print(s.numberToWords(Input))
    if case[2]:
        # Example 3:
        Input = 1234567
        # Output: "One Million Two Hundred Thirty Four Thousand Five Hundred Sixty
        print(s.numberToWords(Input))
    if case[3]:
        # Example 4:
        Input = 1234567891
        # Output: "One Billion Two Hundred Thirty Four Million Five Hundred Sixty Seven
        print(s.numberToWords(Input))
    if case[4]:
        Input = 1000000
        print(s.numberToWords(Input))
