
[C++/Java/Python] Greatest Common Divisor

https://leetcode.com/problems/x-of-a-kind-in-a-deck-of-cards/discuss/175845

* Lang:    cpp
* Author:  lee215
* Votes:   62

Counts all occurrence of all numbers.
Return if the greatest common divisor of counts > 1.

Time Complexity O(N).

**C++:**
```
    bool hasGroupsSizeX(vector<int>& deck) {
        unordered_map<int, int> count;
        int res = 0;
        for (int i : deck) count[i]++;
        for (auto i : count) res = __gcd(i.second, res);
        return res > 1;
    }
```

**Java:**
```
    public boolean hasGroupsSizeX(int[] deck) {
        Map<Integer, Integer> count = new HashMap<>();
        int res = 0;
        for (int i : deck) count.put(i, count.getOrDefault(i, 0) + 1);
        for (int i : count.values()) res = gcd(i, res);
        return res > 1;
    }

    public int gcd(int a, int b) {
        return b > 0 ? gcd(b, a % b) : a;
    }
```
**Python:**
```
    def hasGroupsSizeX(self, deck):
        def gcd(a, b):
            while b: a, b = b, a % b
            return a
        count = collections.Counter(deck).values()
        return reduce(gcd, count) > 1
```
**Python 1-line**
Idea from @gsk694
```
    def hasGroupsSizeX(self, deck):
        return reduce(fractions.gcd, collections.Counter(deck).values()) > 1
```
