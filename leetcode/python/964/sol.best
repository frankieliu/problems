
python2 O(log target) 附带思考过程chinese

https://leetcode.com/problems/least-operators-to-express-number/discuss/208376

* Lang:    cpp
* Author:  chensuim
* Votes:   25

```

class Solution(object):
    def leastOpsExpressTarget(self, x, target):
        """
        :type x: int
        :type target: int
        :rtype: int
        """
        # \u7531\u4E8E\u4E0D\u80FD\u6709\u62EC\u53F7\uFF0C\u6240\u4EE5\u6BCF\u4E00\u4F4D\uFF08x\u8FDB\u5236\uFF09\u5FC5\u987B\u662F\u7531\u81EA\u5DF1\u7EC4\u6210\u6216\u8005\u7531\u4E0B\u4E00\u4F4D\u51CF\u81EA\u5DF1\u4F59\u6570\u7EC4\u6210,\u6240\u4EE5\u9996\u5148\u77ED\u9664\u6CD5\u6C42\u51FA\u6BCF\u4E00\u4F4D\u7684\u4F59\u6570
        rl = list()
        while target:
            rl.append(target%x)
            target/=x
        n = len(rl)
        # \u5728\u4E2A\u4F4D\u7684\u65F6\u5019\uFF0C\u5FC5\u987B\u7528x/x\u8868\u793A1\uFF0C\u6240\u4EE5*2\uFF0C\u4F46\u5176\u5B83\u4F4D\u4E0D\u7528\uFF0C\u6240\u4EE5\u5355\u72EC\u5148\u63D0\u51FA
        pos = rl[0] * 2
        neg = (x-rl[0]) * 2
        for i in range(1,n):
            # \u6B63\u6570\u8868\u793A\u65F6\uFF0C\u53EF\u7528\u81EA\u5DF1+\u5269\u4E0B\u7684\u6B63\u6570\u8868\u793A\u6216\u8005\u591A\u52A0\u4E00\u4E2A\u672C\u4F4D\u7136\u540E\u51CF\u53BB\u4E0A\u4E00\u4F4D\u7684\u4F59\u6570\u8868\u793A
            # \u8D1F\u6570\u8868\u793A\u65F6\uFF0C\u53EF\u7528\u81EA\u5DF1\u7684\u4F59\u6570\u52A0\u4E0A\u5269\u4E0B\u7684\u6B63\u6570\u8868\u793A\u6216\u8005\u7528\u81EA\u5DF1\u7684\u4F59\u6570+\u5269\u4E0B\u7684\u4F59\u6570\uFF0C\u4F46\u6B64\u65F6\u53EF\u4EE5\u5408\u5E76\u540C\u7EA7\u9879\u51CF\u5C11\u8FD0\u7B97\u7B26
            # \u5982\u572810\u8FDB\u5236\u4E0B\uFF0C86\u53EF\u8868\u793A\u4E3A
            # 80 + 6 \uFF086 \u4E3A\u4E0B\u4E00\u4F4D\u6B63\u6570\u8868\u793A
            # 80 + 10 - 4 \uFF084 \u4E3A\u4E0B\u4E00\u4F4D\u8D1F\u6570\u8868\u793A\uFF09
            # 100 - 20 + 6 \uFF08100-20\u4E3A\u672C\u4F4D\u4F59\u6570\u8868\u793A\uFF0C6\u4E3A\u4E0B\u4E00\u4F4D\u6B63\u6570\u8868\u793A
            # 100 - 20 + 10 - 4 \uFF08100-20\u4E3A\u672C\u4F4D\u4F59\u6570\u8868\u793A\uFF0C10 -4 \u4E3A\u4E0B\u4E00\u4F4D\u4F59\u6570\u8868\u793A
            # \u5728\u6B64\u65F6\uFF0C 20 \u548C 10\u6CE8\u5B9A\u4E3A\u540C\u4E00\u4F4D\u4E14\u7B26\u53F7\u76F8\u53CD\uFF0C\u53EF\u4EE5\u7701\u53BB\u4E24\u4E2A\u7B26\u53F7\uFF08\u4E00\u4E2A\u7B26\u53F7\u5728\u8BE5\u4F4D\u7528i \u4E2A\u7B26\u53F7\u8868\u793A\uFF08\u5982100\u4E3A\u7B2C\u4E8C\u4F4D\uFF0C\u6240\u4EE5\u8868\u793A\u4E3A+10 * 10\uFF0C\u7528\u4E24\u4E2A\u7B26\u53F7\uFF0C\u5728\u6B64\u65F6\u6240\u6709\u7B26\u53F7\u5747\u5E26\u81EA\u5DF1\u7684\u6B63\u8D1F\u53F7
            pos, neg = min(rl[i] * i + pos, rl[i] * i + i + neg), min((x - rl[i]) * i + pos, (x-rl[i]) * i + i + neg - 2 * i)
        # \u56E0\u4E3A\u5728\u524D\u9762\u7B97\u6CD5\u4E2D\u6240\u6709\u4F4D\u90FD\u5E26\u81EA\u5DF1\u7684\u6B63\u8D1F\u53F7\uFF0C\u6240\u4EE5\u7B2C\u4E00\u4F4D\u5E94\u8BE5\u51CF\u53BB\u81EA\u5DF1\u7684\u7B26\u53F7\uFF0C\u6240\u4EE5\u603B\u91CF\u51CF1
        # \u6216\u8005\u5728\u4F59\u6570\u8868\u793A\u6CD5\u4E2D\uFF0C\u52A0\u4E0A\u4E00\u4E2A\u66F4\u9AD8\u4F4D\u7684\u51CF\u53BB\u81EA\u5DF1\u8868\u793A\u672C\u4F4D\u4F59\u6570
        # \u6240\u4EE5\u6B64\u9898\u5F52\u6839\u7ED3\u5E95\u8FD8\u662F\u8003\u5BDF\u5BF9\u8FDB\u5236\u7684\u7406\u89E3\u800C\u4E0D\u662F\u7B80\u5355\u7684\u7406\u89E3bfs, dfs\uFF0C\u90A3\u6837\u590D\u6742\u5EA6\u8FDC\u8FDC\u9AD8\u4E8E\u6B64\uFF0C\u4F46\u662F\u662F\u5BF9\u60EF\u6027\u601D\u7EF4\u8005\u7684\u4E00\u79CD\u6311\u6218
        return min(pos-1, n+neg-1)
```
