#
# @lc app=leetcode id=227 lang=python3
#
# [227] Basic Calculator II
#
# https://leetcode.com/problems/basic-calculator-ii/description/
#
# algorithms
# Medium (32.39%)
# Total Accepted:    93.9K
# Total Submissions: 289.9K
# Testcase Example:  '"3+2*2"'
#
# Implement a basic calculator to evaluate a simple expression string.
#
# The expression string contains only non-negative integers, +, -, *, /
# operators and empty spaces  . The integer division should truncate toward
# zero.
#
# Example 1:
#
#
# Input: "3+2*2"
# Output: 7
#
#
# Example 2:
#
#
# Input: " 3/2 "
# Output: 1
#
# Example 3:
#
#
# Input: " 3+5 / 2 "
# Output: 5
#
#
# Note:
#
#
# You may assume that the given expression is always valid.
# Do not use the eval built-in library function.
#
#

from functools import reduce
from collections import deque


class Solution:

    def calculate(self, s):
        """
        :type s: str
        :rtype: int
        """
        prec = {'+': 0, '-': 0, '*': 1, '/': 1}
        tokens = mysplit(remove_white(s))
        st = deque()
        op = deque()
        for t in tokens:
            if t in prec:
                op.append(t)
            else:
                if op and prec[op[-1]] == 1:
                    # print(op, st, t)
                    st.append(binop(op.pop(), st.pop(), t))
                else:
                    st.append(t)

        # for next level precedence must take from bottom of stack
        while op:
            st.appendleft(binop(op.popleft(), st.popleft(), st.popleft()))
        return st.pop()


def binop(ostr, a, b):
    # print("binop {} {} {}".format(a, ostr, b))
    if ostr == "*":
        return a * b
    if ostr == "/":
        return a // b
    if ostr == "+":
        return a + b
    if ostr == "-":
        return a - b
    return 0


def remove_white(s):
    return reduce(lambda x, y: x+y, [x for x in s if x != " "], "")


def mysplit(s):
    out = []
    acc = ""
    for x in s:
        # operand
        if ord(x)-ord('0') in range(0,10):
            acc += x
        else:
            if len(acc) > 0:
                out.append(int(acc))
                acc = ""
            out.append(x)

    if len(acc) > 0:
        out.append(int(acc))
    return out


test = True
if test:
    s = Solution()
    # print(s.calculate('3+5/2'))
    # print(s.calculate('3+5 / 2'))
    print(s.calculate('0 - 2147483647'))
