Python Best Practices
=====================

PEP 8
-----

`PEP 8 <http://www.python.org/dev/peps/pep-0008/>`_ is the offical style guide 
for Python code. It has good recomendations for naming conventions, spacing, 
etc.

Code Like a Pythonista: Idiomatic Python
----------------------------------------

This `David Goodger's presentation 
<http://python.net/~goodger/projects/pycon/2007/idiomatic/>`_ is the best 
resource available on python idioms.

Common Mistakes
---------------

There are couple of nice articles on common mistakes people do in Python.

* `10 Python pitfalls <http://zephyrfalcon.org/labs/python_pitfalls.html>`_
* `When Pythons Attack: Common Mistakes of Python Programmers <http://onlamp.com/pub/a/python/2004/02/05/learn_python.html>`_

The Zen of Python
-----------------

When in doubt, ``import this``.

.. code-block:: text

	>>> import this
	The Zen of Python, by Tim Peters
	
	Beautiful is better than ugly.
	Explicit is better than implicit.
	Simple is better than complex.
	Complex is better than complicated.
	Flat is better than nested.
	Sparse is better than dense.
	Readability counts.
	Special cases aren't special enough to break the rules.
	Although practicality beats purity.
	Errors should never pass silently.
	Unless explicitly silenced.
	In the face of ambiguity, refuse the temptation to guess.
	There should be one-- and preferably only one --obvious way to do it.
	Although that way may not be obvious at first unless you're Dutch.
	Now is better than never.
	Although never is often better than *right* now.
	If the implementation is hard to explain, it's a bad idea.
	If the implementation is easy to explain, it may be a good idea.
	Namespaces are one honking great idea -- let's do more of those!
	>>> 
