// Sql related stuff
import java.sql.*;

// Do not put semicolon at the end of statement

// Csv related stuff
/*
import java.io.FileReader;
import java.util.Arrays;
import au.com.bytecode.opencsv.CSVReader;
*/

/*
 * This Java source file was generated by the Gradle 'init' task.
 */

public class App {

    public Connection con;
    public Statement stmt;
    public ResultSet rs;
    
    App() {}

    // Hello world!
    public String getGreeting() {
        return "Hello world.";
    }

    // Drops a table (gets rid of a table)
    public void dbDrop() {
        try {
            // https://stackoverflow.com/questions/2942788/check-if-table-exists
            // Oracle requires all caps for table name!!!
            if (tableExist(this.con,"MYEMP")) {
                stmt.executeQuery("drop table myemp");
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    // Connects to a database
    public void dbInit() {
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            
            this.con = DriverManager.getConnection
                ("jdbc:oracle:thin:@localhost:1521:rdbmsod",
                 "scott",
                 "tiger");
            
            this.stmt = this.con.createStatement();
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    // Checks if a table exists
    public static boolean tableExist(Connection conn, String tableName) throws SQLException {
        boolean tExists = false;
        try (ResultSet rs = conn.getMetaData().getTables(null, null, tableName, null)) {
            while (rs.next()) {
                String tName = rs.getString("TABLE_NAME");
                if (tName != null && tName.equals(tableName)) {
                    tExists = true;
                    break;
                }
            }
        }
        return tExists;
    }

    // Stops the connection
    public void dbStop() {
        try {
            this.con.close();
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    // Creates a table
    public void dbCreate() {
        try {
            this.stmt.executeQuery
                ("create table myemp (id number(10), name varchar2(40), age number(3))");
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    // Inserts element into a table
    public void dbWrite() {
        try {
            this.stmt.executeQuery
                ("insert into myemp (id,name,age) values (0,'aob',10)");
            this.stmt.executeQuery
                ("insert into myemp (id,name,age) values (1,'bob',20)");
            this.stmt.executeQuery
                ("insert into myemp (id,name,age) values (2,'cob',30)");
         } catch (Exception e) {
            System.out.println(e);
        }
    }

    // Insert elements in a batch
    public void dbWriteBatch() {
        try {
            PreparedStatement pstmt = this.con.prepareStatement
                ("insert into myemp" +
                 "(id,name,age)" +
                 "values (?,?,?)");

            Integer[] id = new Integer[]
                {3,4,5};
            String[] name = new String[]
                {"dob","eob","fob"};
            Integer[] number = new Integer[]
                {40,50,60};
            
            for (int i = 0; i < id.length; i++) {
                pstmt.setInt(1, id[i]);
                pstmt.setString(2, name[i]);
                pstmt.setInt(3, number[i]);
                pstmt.addBatch();
            }

            pstmt.executeBatch();

            // Auto-commit is set on
            // this.con.commit();
           
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    // Reads data from a table
    public void dbRead() {
        try {
    
            this.rs = this.stmt.executeQuery("select * from myemp");
            while (rs.next())
                System.out.println(rs.getInt(1) + " " +
                                   rs.getString(2) + " " +
                                   rs.getString(3));
            } catch (Exception e) {
            System.out.println(e);
        }
    }

    public static void main(String[] args) {
        App a = new App();
        System.out.println(a.getGreeting());

        a.dbInit();    // initiates a connection
        a.dbDrop();    // drop myemp table
        a.dbCreate();  // creates myemp
        a.dbWrite();   // insert rows
        a.dbWriteBatch();  // insert more rows
        a.dbRead();    // reads the rows
        a.dbDrop();    // drop myemp table
        a.dbStop();    // stops the connection
    }
}
